program symmetrize_TCF
  use parameters
  use m_symmetry
  implicit none

  character(80)::symmetry, file(6), line, outfile
  integer:: sym_axis, nsteps, i
  real(kind=wp), allocatable:: Mat_symm(:,:,:)
  real(kind=wp):: tcf_tmp(3,3), x,y

  ! read input 
  read(5,*) symmetry, sym_axis 
  write(6,*) symmetry, sym_axis 
  read(5,*) nsteps
  write(6,*) nsteps
  read(5,*) outfile
  write(6,*) outfile

  ! index i voightformat: 11, 22, 33, 23, 13, 12
  do i=1,6
    read(5,*) file(i)
    write(6,*) i, file(i)
    open(10+i, file=file(i), status="old")
    read(10+i,'(A80)') line
  end do

  ! determine symmetry
  if(symmetry .eq. "cubic") then
    
    write(6,*) "Using cubic symmetry"
    allocate(Mat_symm(3,3,48))
    call get_cubic_symm(Mat_symm)
    
  else if(symmetry .eq. "tetragonal") then
    
    write(6,*) "Using tetragonal symmetry around axis", sym_axis
    allocate(Mat_symm(3,3,8))
    call get_tetragonal_symm(Mat_symm,sym_axis)
  else
    write(6,*) "Error, symmetry must be either 'cubic' or 'tetragonal'"
    stop
  end if
  
  ! open files
  !do i=1,6
!
!  end do

  open(20, file=outfile, status="unknown")

  ! do the main operations
  write(20,'(A80)') line

  do i=1, nsteps
    
    read(11,*) x, y 
    tcf_tmp(1,1) = y
    read(12,*) x, y 
    tcf_tmp(2,2) = y
    read(13,*) x, y 
    tcf_tmp(3,3) = y

    read(14,*) x, y 
    tcf_tmp(2,3) = y
    tcf_tmp(3,2) = y

    read(15,*) x, y 
    tcf_tmp(1,3) = y
    tcf_tmp(3,1) = y

    read(16,*) x, y 
    tcf_tmp(1,2) = y
    tcf_tmp(2,1) = y
    
    call symmetrize_2(tcf_tmp, Mat_symm)

    write(20,'(4ES18.10)') x, tcf_tmp(1,1), tcf_tmp(2,2), tcf_tmp(3,3) !, tcf_tmp(3,2), tcf_tmp(3,1), tcf_tmp(2,1)

  end do

end program symmetrize_TCF
